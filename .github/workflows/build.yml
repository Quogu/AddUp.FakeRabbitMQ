name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SOLUTION: src/AddUp.RabbitMQ.Fakes.sln
  BUILD_CONFIGURATION: Release
  VERSION: 1.2.1

jobs:
  build:

    runs-on: windows-2019

    steps:
    - name: Dump Environment
      run: |
        echo "Solution     : ${{env.SOLUTION}}" 
        echo "Configuration: ${{env.BUILD_CONFIGURATION}}"
        echo "Version      : ${{env.VERSION}}"
    - uses: actions/checkout@v2
      # Java 11 is needed by Sonar analyzer
    - uses: actions/setup-java@v1
      with:
        java-version: 11
        java-package: jdk
        architecture: x64
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Restore
      run: dotnet restore "${{env.SOLUTION}}" --configfile ./nuget.config
    - name: Begin Sonar Analysis
      run: dotnet sonarscanner begin /key:"addupsolutions_AddUp.RabbitMQ.Fakes" /name:"AddUp.RabbitMQ.Fakes" /version:"${{env.VERSION}}" /organization:"addupsolutions-oss" /d:sonar.cs.vstest.reportsPaths="**/TestResults/**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/*.opencover.xml" /d:sonar.coverage.exclusions="**Tests.cs" /d:sonar.login="${{secrets.SONAR_TOKEN}}" /d:sonar.verbose=true /d:sonar.host.url=https://sonarcloud.io
    - name: Build
      run: dotnet build "${{env.SOLUTION}}" --configuration "${{env.BUILD_CONFIGURATION}}" --no-restore
    - name: Test
      run: dotnet test "${{env.SOLUTION}}" --configuration "${{env.BUILD_CONFIGURATION}}" --no-restore --no-build --logger trx --collect "Code Coverage" --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/
    - name: End Sonar Analysis
      run: dotnet sonarscanner end /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
